{
    "base test": {
        "source": "element(#foo)",
        "ast": {
            "type": "Function",
            "name": "element",
            "children": [
                {
                    "type": "IdSelector",
                    "name": "foo"
                }
            ]
        }
    },
    "should be case insensitive": {
        "source": "ElemenT(#foo)",
        "ast": {
            "type": "Function",
            "name": "ElemenT",
            "children": [
                {
                    "type": "IdSelector",
                    "name": "foo"
                }
            ]
        }
    },
    "spaces and comment": {
        "source": "element(  /*1*/  #foo  /*2*/  )",
        "generate": "element(#foo)",
        "ast": {
            "type": "Function",
            "name": "element",
            "children": [
                {
                    "type": "IdSelector",
                    "name": "foo"
                }
            ]
        }
    },
    "-moz-element": {
        "source": "-moz-element(#foo)",
        "ast": {
            "type": "Function",
            "name": "-moz-element",
            "children": [
                {
                    "type": "IdSelector",
                    "name": "foo"
                }
            ]
        }
    },
    "error": [
        {
            "source": "element()",
            "offset": "        ^",
            "error": "Hash is expected"
        },
        {
            "source": "element(#)",
            "offset": "         ^",
            "error": "Name is expected"
        },
        {
            "source": "element(123)",
            "offset": "        ^",
            "error": "Hash is expected"
        },
        {
            "source": "element(#foo #bar)",
            "offset": "             ^",
            "error": "RightParenthesis is expected"
        }
    ]
}
